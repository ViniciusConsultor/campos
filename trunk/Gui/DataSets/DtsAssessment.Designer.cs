//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace EzPos.GUI.DataSets {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DtsAssessment")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DtsAssessment : global::System.Data.DataSet {
        
        private DtbAssessmentDataTable tableDtbAssessment;
        
        private DtbProductDataTable tableDtbProduct;
        
        private DtbPurchaseOrdersReportDataTable tableDtbPurchaseOrdersReport;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DtsAssessment() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DtsAssessment(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["DtbAssessment"] != null)) {
                    base.Tables.Add(new DtbAssessmentDataTable(ds.Tables["DtbAssessment"]));
                }
                if ((ds.Tables["DtbProduct"] != null)) {
                    base.Tables.Add(new DtbProductDataTable(ds.Tables["DtbProduct"]));
                }
                if ((ds.Tables["DtbPurchaseOrdersReport"] != null)) {
                    base.Tables.Add(new DtbPurchaseOrdersReportDataTable(ds.Tables["DtbPurchaseOrdersReport"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DtbAssessmentDataTable DtbAssessment {
            get {
                return this.tableDtbAssessment;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DtbProductDataTable DtbProduct {
            get {
                return this.tableDtbProduct;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DtbPurchaseOrdersReportDataTable DtbPurchaseOrdersReport {
            get {
                return this.tableDtbPurchaseOrdersReport;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DtsAssessment cln = ((DtsAssessment)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["DtbAssessment"] != null)) {
                    base.Tables.Add(new DtbAssessmentDataTable(ds.Tables["DtbAssessment"]));
                }
                if ((ds.Tables["DtbProduct"] != null)) {
                    base.Tables.Add(new DtbProductDataTable(ds.Tables["DtbProduct"]));
                }
                if ((ds.Tables["DtbPurchaseOrdersReport"] != null)) {
                    base.Tables.Add(new DtbPurchaseOrdersReportDataTable(ds.Tables["DtbPurchaseOrdersReport"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableDtbAssessment = ((DtbAssessmentDataTable)(base.Tables["DtbAssessment"]));
            if ((initTable == true)) {
                if ((this.tableDtbAssessment != null)) {
                    this.tableDtbAssessment.InitVars();
                }
            }
            this.tableDtbProduct = ((DtbProductDataTable)(base.Tables["DtbProduct"]));
            if ((initTable == true)) {
                if ((this.tableDtbProduct != null)) {
                    this.tableDtbProduct.InitVars();
                }
            }
            this.tableDtbPurchaseOrdersReport = ((DtbPurchaseOrdersReportDataTable)(base.Tables["DtbPurchaseOrdersReport"]));
            if ((initTable == true)) {
                if ((this.tableDtbPurchaseOrdersReport != null)) {
                    this.tableDtbPurchaseOrdersReport.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DtsAssessment";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DtsAssessment.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableDtbAssessment = new DtbAssessmentDataTable();
            base.Tables.Add(this.tableDtbAssessment);
            this.tableDtbProduct = new DtbProductDataTable();
            base.Tables.Add(this.tableDtbProduct);
            this.tableDtbPurchaseOrdersReport = new DtbPurchaseOrdersReportDataTable();
            base.Tables.Add(this.tableDtbPurchaseOrdersReport);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDtbAssessment() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDtbProduct() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDtbPurchaseOrdersReport() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DtsAssessment ds = new DtsAssessment();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void DtbAssessmentRowChangeEventHandler(object sender, DtbAssessmentRowChangeEvent e);
        
        public delegate void DtbProductRowChangeEventHandler(object sender, DtbProductRowChangeEvent e);
        
        public delegate void DtbPurchaseOrdersReportRowChangeEventHandler(object sender, DtbPurchaseOrdersReportRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DtbAssessmentDataTable : global::System.Data.TypedTableBase<DtbAssessmentRow> {
            
            private global::System.Data.DataColumn columnAssessmentID;
            
            private global::System.Data.DataColumn columnSaleOrderNumber;
            
            private global::System.Data.DataColumn columnSaleOrderDate;
            
            private global::System.Data.DataColumn columnCustomerName;
            
            private global::System.Data.DataColumn columnProductName;
            
            private global::System.Data.DataColumn columnQtySoldStr;
            
            private global::System.Data.DataColumn columnUnitName;
            
            private global::System.Data.DataColumn columnPriceIn;
            
            private global::System.Data.DataColumn columnPriceOut;
            
            private global::System.Data.DataColumn columnSubTotalIn;
            
            private global::System.Data.DataColumn columnSubTotalOut;
            
            private global::System.Data.DataColumn columnBenefit;
            
            private global::System.Data.DataColumn columnAmountSold;
            
            private global::System.Data.DataColumn columnAmountPaid;
            
            private global::System.Data.DataColumn columnAmountReturn;
            
            private global::System.Data.DataColumn columnDiscount;
            
            private global::System.Data.DataColumn columnCashier;
            
            private global::System.Data.DataColumn columnDeliverer;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DtbAssessmentDataTable() {
                this.TableName = "DtbAssessment";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DtbAssessmentDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DtbAssessmentDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AssessmentIDColumn {
                get {
                    return this.columnAssessmentID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SaleOrderNumberColumn {
                get {
                    return this.columnSaleOrderNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SaleOrderDateColumn {
                get {
                    return this.columnSaleOrderDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerNameColumn {
                get {
                    return this.columnCustomerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProductNameColumn {
                get {
                    return this.columnProductName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtySoldStrColumn {
                get {
                    return this.columnQtySoldStr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitNameColumn {
                get {
                    return this.columnUnitName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PriceInColumn {
                get {
                    return this.columnPriceIn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PriceOutColumn {
                get {
                    return this.columnPriceOut;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubTotalInColumn {
                get {
                    return this.columnSubTotalIn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubTotalOutColumn {
                get {
                    return this.columnSubTotalOut;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BenefitColumn {
                get {
                    return this.columnBenefit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountSoldColumn {
                get {
                    return this.columnAmountSold;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountPaidColumn {
                get {
                    return this.columnAmountPaid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountReturnColumn {
                get {
                    return this.columnAmountReturn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DiscountColumn {
                get {
                    return this.columnDiscount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CashierColumn {
                get {
                    return this.columnCashier;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DelivererColumn {
                get {
                    return this.columnDeliverer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DtbAssessmentRow this[int index] {
                get {
                    return ((DtbAssessmentRow)(this.Rows[index]));
                }
            }
            
            public event DtbAssessmentRowChangeEventHandler DtbAssessmentRowChanging;
            
            public event DtbAssessmentRowChangeEventHandler DtbAssessmentRowChanged;
            
            public event DtbAssessmentRowChangeEventHandler DtbAssessmentRowDeleting;
            
            public event DtbAssessmentRowChangeEventHandler DtbAssessmentRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDtbAssessmentRow(DtbAssessmentRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DtbAssessmentRow AddDtbAssessmentRow(
                        int AssessmentID, 
                        string SaleOrderNumber, 
                        System.DateTime SaleOrderDate, 
                        string CustomerName, 
                        string ProductName, 
                        string QtySoldStr, 
                        string UnitName, 
                        double PriceIn, 
                        double PriceOut, 
                        double SubTotalIn, 
                        double SubTotalOut, 
                        double Benefit, 
                        double AmountSold, 
                        double AmountPaid, 
                        double AmountReturn, 
                        double Discount, 
                        string Cashier, 
                        string Deliverer) {
                DtbAssessmentRow rowDtbAssessmentRow = ((DtbAssessmentRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        AssessmentID,
                        SaleOrderNumber,
                        SaleOrderDate,
                        CustomerName,
                        ProductName,
                        QtySoldStr,
                        UnitName,
                        PriceIn,
                        PriceOut,
                        SubTotalIn,
                        SubTotalOut,
                        Benefit,
                        AmountSold,
                        AmountPaid,
                        AmountReturn,
                        Discount,
                        Cashier,
                        Deliverer};
                rowDtbAssessmentRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDtbAssessmentRow);
                return rowDtbAssessmentRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DtbAssessmentRow FindByAssessmentID(int AssessmentID) {
                return ((DtbAssessmentRow)(this.Rows.Find(new object[] {
                            AssessmentID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DtbAssessmentDataTable cln = ((DtbAssessmentDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DtbAssessmentDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnAssessmentID = base.Columns["AssessmentID"];
                this.columnSaleOrderNumber = base.Columns["SaleOrderNumber"];
                this.columnSaleOrderDate = base.Columns["SaleOrderDate"];
                this.columnCustomerName = base.Columns["CustomerName"];
                this.columnProductName = base.Columns["ProductName"];
                this.columnQtySoldStr = base.Columns["QtySoldStr"];
                this.columnUnitName = base.Columns["UnitName"];
                this.columnPriceIn = base.Columns["PriceIn"];
                this.columnPriceOut = base.Columns["PriceOut"];
                this.columnSubTotalIn = base.Columns["SubTotalIn"];
                this.columnSubTotalOut = base.Columns["SubTotalOut"];
                this.columnBenefit = base.Columns["Benefit"];
                this.columnAmountSold = base.Columns["AmountSold"];
                this.columnAmountPaid = base.Columns["AmountPaid"];
                this.columnAmountReturn = base.Columns["AmountReturn"];
                this.columnDiscount = base.Columns["Discount"];
                this.columnCashier = base.Columns["Cashier"];
                this.columnDeliverer = base.Columns["Deliverer"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnAssessmentID = new global::System.Data.DataColumn("AssessmentID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssessmentID);
                this.columnSaleOrderNumber = new global::System.Data.DataColumn("SaleOrderNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaleOrderNumber);
                this.columnSaleOrderDate = new global::System.Data.DataColumn("SaleOrderDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaleOrderDate);
                this.columnCustomerName = new global::System.Data.DataColumn("CustomerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerName);
                this.columnProductName = new global::System.Data.DataColumn("ProductName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductName);
                this.columnQtySoldStr = new global::System.Data.DataColumn("QtySoldStr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQtySoldStr);
                this.columnUnitName = new global::System.Data.DataColumn("UnitName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitName);
                this.columnPriceIn = new global::System.Data.DataColumn("PriceIn", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPriceIn);
                this.columnPriceOut = new global::System.Data.DataColumn("PriceOut", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPriceOut);
                this.columnSubTotalIn = new global::System.Data.DataColumn("SubTotalIn", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubTotalIn);
                this.columnSubTotalOut = new global::System.Data.DataColumn("SubTotalOut", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubTotalOut);
                this.columnBenefit = new global::System.Data.DataColumn("Benefit", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBenefit);
                this.columnAmountSold = new global::System.Data.DataColumn("AmountSold", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmountSold);
                this.columnAmountPaid = new global::System.Data.DataColumn("AmountPaid", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmountPaid);
                this.columnAmountReturn = new global::System.Data.DataColumn("AmountReturn", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmountReturn);
                this.columnDiscount = new global::System.Data.DataColumn("Discount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscount);
                this.columnCashier = new global::System.Data.DataColumn("Cashier", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCashier);
                this.columnDeliverer = new global::System.Data.DataColumn("Deliverer", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeliverer);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnAssessmentID}, true));
                this.columnAssessmentID.AllowDBNull = false;
                this.columnAssessmentID.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DtbAssessmentRow NewDtbAssessmentRow() {
                return ((DtbAssessmentRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DtbAssessmentRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DtbAssessmentRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DtbAssessmentRowChanged != null)) {
                    this.DtbAssessmentRowChanged(this, new DtbAssessmentRowChangeEvent(((DtbAssessmentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DtbAssessmentRowChanging != null)) {
                    this.DtbAssessmentRowChanging(this, new DtbAssessmentRowChangeEvent(((DtbAssessmentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DtbAssessmentRowDeleted != null)) {
                    this.DtbAssessmentRowDeleted(this, new DtbAssessmentRowChangeEvent(((DtbAssessmentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DtbAssessmentRowDeleting != null)) {
                    this.DtbAssessmentRowDeleting(this, new DtbAssessmentRowChangeEvent(((DtbAssessmentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDtbAssessmentRow(DtbAssessmentRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DtsAssessment ds = new DtsAssessment();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DtbAssessmentDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DtbProductDataTable : global::System.Data.TypedTableBase<DtbProductRow> {
            
            private global::System.Data.DataColumn columnProductID;
            
            private global::System.Data.DataColumn columnProductCode;
            
            private global::System.Data.DataColumn columnProductName;
            
            private global::System.Data.DataColumn columnDisplayName;
            
            private global::System.Data.DataColumn columnRemark;
            
            private global::System.Data.DataColumn columnMinQty;
            
            private global::System.Data.DataColumn columnUnitPriceIn;
            
            private global::System.Data.DataColumn columnUnitPriceOut;
            
            private global::System.Data.DataColumn columnQtyInStock;
            
            private global::System.Data.DataColumn columnQtySold;
            
            private global::System.Data.DataColumn columnExtraPercentage;
            
            private global::System.Data.DataColumn columnCategoryID;
            
            private global::System.Data.DataColumn columnLaboratoryID;
            
            private global::System.Data.DataColumn columnCountryID;
            
            private global::System.Data.DataColumn columnLastUpdate;
            
            private global::System.Data.DataColumn columnLatestUnitID;
            
            private global::System.Data.DataColumn columnLatestLocationID;
            
            private global::System.Data.DataColumn columnLastExpire;
            
            private global::System.Data.DataColumn columnStoreID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DtbProductDataTable() {
                this.TableName = "DtbProduct";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DtbProductDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DtbProductDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProductIDColumn {
                get {
                    return this.columnProductID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProductCodeColumn {
                get {
                    return this.columnProductCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProductNameColumn {
                get {
                    return this.columnProductName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DisplayNameColumn {
                get {
                    return this.columnDisplayName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RemarkColumn {
                get {
                    return this.columnRemark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MinQtyColumn {
                get {
                    return this.columnMinQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitPriceInColumn {
                get {
                    return this.columnUnitPriceIn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitPriceOutColumn {
                get {
                    return this.columnUnitPriceOut;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyInStockColumn {
                get {
                    return this.columnQtyInStock;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtySoldColumn {
                get {
                    return this.columnQtySold;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExtraPercentageColumn {
                get {
                    return this.columnExtraPercentage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CategoryIDColumn {
                get {
                    return this.columnCategoryID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LaboratoryIDColumn {
                get {
                    return this.columnLaboratoryID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CountryIDColumn {
                get {
                    return this.columnCountryID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LastUpdateColumn {
                get {
                    return this.columnLastUpdate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LatestUnitIDColumn {
                get {
                    return this.columnLatestUnitID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LatestLocationIDColumn {
                get {
                    return this.columnLatestLocationID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LastExpireColumn {
                get {
                    return this.columnLastExpire;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StoreIDColumn {
                get {
                    return this.columnStoreID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DtbProductRow this[int index] {
                get {
                    return ((DtbProductRow)(this.Rows[index]));
                }
            }
            
            public event DtbProductRowChangeEventHandler DtbProductRowChanging;
            
            public event DtbProductRowChangeEventHandler DtbProductRowChanged;
            
            public event DtbProductRowChangeEventHandler DtbProductRowDeleting;
            
            public event DtbProductRowChangeEventHandler DtbProductRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDtbProductRow(DtbProductRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DtbProductRow AddDtbProductRow(
                        int ProductID, 
                        string ProductCode, 
                        string ProductName, 
                        string DisplayName, 
                        string Remark, 
                        double MinQty, 
                        double UnitPriceIn, 
                        double UnitPriceOut, 
                        double QtyInStock, 
                        double QtySold, 
                        double ExtraPercentage, 
                        int CategoryID, 
                        int LaboratoryID, 
                        int CountryID, 
                        System.DateTime LastUpdate, 
                        int LatestUnitID, 
                        int LatestLocationID, 
                        System.DateTime LastExpire, 
                        int StoreID) {
                DtbProductRow rowDtbProductRow = ((DtbProductRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ProductID,
                        ProductCode,
                        ProductName,
                        DisplayName,
                        Remark,
                        MinQty,
                        UnitPriceIn,
                        UnitPriceOut,
                        QtyInStock,
                        QtySold,
                        ExtraPercentage,
                        CategoryID,
                        LaboratoryID,
                        CountryID,
                        LastUpdate,
                        LatestUnitID,
                        LatestLocationID,
                        LastExpire,
                        StoreID};
                rowDtbProductRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDtbProductRow);
                return rowDtbProductRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DtbProductRow FindByProductID(int ProductID) {
                return ((DtbProductRow)(this.Rows.Find(new object[] {
                            ProductID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DtbProductDataTable cln = ((DtbProductDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DtbProductDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProductID = base.Columns["ProductID"];
                this.columnProductCode = base.Columns["ProductCode"];
                this.columnProductName = base.Columns["ProductName"];
                this.columnDisplayName = base.Columns["DisplayName"];
                this.columnRemark = base.Columns["Remark"];
                this.columnMinQty = base.Columns["MinQty"];
                this.columnUnitPriceIn = base.Columns["UnitPriceIn"];
                this.columnUnitPriceOut = base.Columns["UnitPriceOut"];
                this.columnQtyInStock = base.Columns["QtyInStock"];
                this.columnQtySold = base.Columns["QtySold"];
                this.columnExtraPercentage = base.Columns["ExtraPercentage"];
                this.columnCategoryID = base.Columns["CategoryID"];
                this.columnLaboratoryID = base.Columns["LaboratoryID"];
                this.columnCountryID = base.Columns["CountryID"];
                this.columnLastUpdate = base.Columns["LastUpdate"];
                this.columnLatestUnitID = base.Columns["LatestUnitID"];
                this.columnLatestLocationID = base.Columns["LatestLocationID"];
                this.columnLastExpire = base.Columns["LastExpire"];
                this.columnStoreID = base.Columns["StoreID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProductID = new global::System.Data.DataColumn("ProductID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductID);
                this.columnProductCode = new global::System.Data.DataColumn("ProductCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductCode);
                this.columnProductName = new global::System.Data.DataColumn("ProductName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductName);
                this.columnDisplayName = new global::System.Data.DataColumn("DisplayName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDisplayName);
                this.columnRemark = new global::System.Data.DataColumn("Remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemark);
                this.columnMinQty = new global::System.Data.DataColumn("MinQty", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMinQty);
                this.columnUnitPriceIn = new global::System.Data.DataColumn("UnitPriceIn", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitPriceIn);
                this.columnUnitPriceOut = new global::System.Data.DataColumn("UnitPriceOut", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitPriceOut);
                this.columnQtyInStock = new global::System.Data.DataColumn("QtyInStock", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQtyInStock);
                this.columnQtySold = new global::System.Data.DataColumn("QtySold", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQtySold);
                this.columnExtraPercentage = new global::System.Data.DataColumn("ExtraPercentage", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExtraPercentage);
                this.columnCategoryID = new global::System.Data.DataColumn("CategoryID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCategoryID);
                this.columnLaboratoryID = new global::System.Data.DataColumn("LaboratoryID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLaboratoryID);
                this.columnCountryID = new global::System.Data.DataColumn("CountryID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountryID);
                this.columnLastUpdate = new global::System.Data.DataColumn("LastUpdate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastUpdate);
                this.columnLatestUnitID = new global::System.Data.DataColumn("LatestUnitID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLatestUnitID);
                this.columnLatestLocationID = new global::System.Data.DataColumn("LatestLocationID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLatestLocationID);
                this.columnLastExpire = new global::System.Data.DataColumn("LastExpire", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastExpire);
                this.columnStoreID = new global::System.Data.DataColumn("StoreID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStoreID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnProductID}, true));
                this.columnProductID.AllowDBNull = false;
                this.columnProductID.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DtbProductRow NewDtbProductRow() {
                return ((DtbProductRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DtbProductRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DtbProductRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DtbProductRowChanged != null)) {
                    this.DtbProductRowChanged(this, new DtbProductRowChangeEvent(((DtbProductRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DtbProductRowChanging != null)) {
                    this.DtbProductRowChanging(this, new DtbProductRowChangeEvent(((DtbProductRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DtbProductRowDeleted != null)) {
                    this.DtbProductRowDeleted(this, new DtbProductRowChangeEvent(((DtbProductRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DtbProductRowDeleting != null)) {
                    this.DtbProductRowDeleting(this, new DtbProductRowChangeEvent(((DtbProductRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDtbProductRow(DtbProductRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DtsAssessment ds = new DtsAssessment();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DtbProductDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DtbPurchaseOrdersReportDataTable : global::System.Data.TypedTableBase<DtbPurchaseOrdersReportRow> {
            
            private global::System.Data.DataColumn columnRowID;
            
            private global::System.Data.DataColumn columnPurchaseOrderID;
            
            private global::System.Data.DataColumn columnPurchaseOrderNumber;
            
            private global::System.Data.DataColumn columnPurchaseOrderDate;
            
            private global::System.Data.DataColumn columnPaymentDate;
            
            private global::System.Data.DataColumn columnAmountStandard;
            
            private global::System.Data.DataColumn columnSupplierID;
            
            private global::System.Data.DataColumn columnSupplierName;
            
            private global::System.Data.DataColumn columnAmountPaid;
            
            private global::System.Data.DataColumn columnProductID;
            
            private global::System.Data.DataColumn columnProductName;
            
            private global::System.Data.DataColumn columnBarCodeValue;
            
            private global::System.Data.DataColumn columnDateIn;
            
            private global::System.Data.DataColumn columnDateExpire;
            
            private global::System.Data.DataColumn columnQuantity;
            
            private global::System.Data.DataColumn columnUnitPrice;
            
            private global::System.Data.DataColumn columnProductUnitID;
            
            private global::System.Data.DataColumn columnProductUnitName;
            
            private global::System.Data.DataColumn columnCellID;
            
            private global::System.Data.DataColumn columnCellName;
            
            private global::System.Data.DataColumn columnPaidStatus;
            
            private global::System.Data.DataColumn columnAmountStandardDuplicate;
            
            private global::System.Data.DataColumn columnAmountPaidDuplicate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DtbPurchaseOrdersReportDataTable() {
                this.TableName = "DtbPurchaseOrdersReport";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DtbPurchaseOrdersReportDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DtbPurchaseOrdersReportDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RowIDColumn {
                get {
                    return this.columnRowID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PurchaseOrderIDColumn {
                get {
                    return this.columnPurchaseOrderID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PurchaseOrderNumberColumn {
                get {
                    return this.columnPurchaseOrderNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PurchaseOrderDateColumn {
                get {
                    return this.columnPurchaseOrderDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PaymentDateColumn {
                get {
                    return this.columnPaymentDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountStandardColumn {
                get {
                    return this.columnAmountStandard;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SupplierIDColumn {
                get {
                    return this.columnSupplierID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SupplierNameColumn {
                get {
                    return this.columnSupplierName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountPaidColumn {
                get {
                    return this.columnAmountPaid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProductIDColumn {
                get {
                    return this.columnProductID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProductNameColumn {
                get {
                    return this.columnProductName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BarCodeValueColumn {
                get {
                    return this.columnBarCodeValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateInColumn {
                get {
                    return this.columnDateIn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateExpireColumn {
                get {
                    return this.columnDateExpire;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QuantityColumn {
                get {
                    return this.columnQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitPriceColumn {
                get {
                    return this.columnUnitPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProductUnitIDColumn {
                get {
                    return this.columnProductUnitID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProductUnitNameColumn {
                get {
                    return this.columnProductUnitName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CellIDColumn {
                get {
                    return this.columnCellID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CellNameColumn {
                get {
                    return this.columnCellName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PaidStatusColumn {
                get {
                    return this.columnPaidStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountStandardDuplicateColumn {
                get {
                    return this.columnAmountStandardDuplicate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountPaidDuplicateColumn {
                get {
                    return this.columnAmountPaidDuplicate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DtbPurchaseOrdersReportRow this[int index] {
                get {
                    return ((DtbPurchaseOrdersReportRow)(this.Rows[index]));
                }
            }
            
            public event DtbPurchaseOrdersReportRowChangeEventHandler DtbPurchaseOrdersReportRowChanging;
            
            public event DtbPurchaseOrdersReportRowChangeEventHandler DtbPurchaseOrdersReportRowChanged;
            
            public event DtbPurchaseOrdersReportRowChangeEventHandler DtbPurchaseOrdersReportRowDeleting;
            
            public event DtbPurchaseOrdersReportRowChangeEventHandler DtbPurchaseOrdersReportRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDtbPurchaseOrdersReportRow(DtbPurchaseOrdersReportRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DtbPurchaseOrdersReportRow AddDtbPurchaseOrdersReportRow(
                        int RowID, 
                        int PurchaseOrderID, 
                        string PurchaseOrderNumber, 
                        string PurchaseOrderDate, 
                        string PaymentDate, 
                        double AmountStandard, 
                        int SupplierID, 
                        string SupplierName, 
                        double AmountPaid, 
                        int ProductID, 
                        string ProductName, 
                        string BarCodeValue, 
                        string DateIn, 
                        string DateExpire, 
                        double Quantity, 
                        double UnitPrice, 
                        int ProductUnitID, 
                        string ProductUnitName, 
                        int CellID, 
                        string CellName, 
                        string PaidStatus, 
                        double AmountStandardDuplicate, 
                        double AmountPaidDuplicate) {
                DtbPurchaseOrdersReportRow rowDtbPurchaseOrdersReportRow = ((DtbPurchaseOrdersReportRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        RowID,
                        PurchaseOrderID,
                        PurchaseOrderNumber,
                        PurchaseOrderDate,
                        PaymentDate,
                        AmountStandard,
                        SupplierID,
                        SupplierName,
                        AmountPaid,
                        ProductID,
                        ProductName,
                        BarCodeValue,
                        DateIn,
                        DateExpire,
                        Quantity,
                        UnitPrice,
                        ProductUnitID,
                        ProductUnitName,
                        CellID,
                        CellName,
                        PaidStatus,
                        AmountStandardDuplicate,
                        AmountPaidDuplicate};
                rowDtbPurchaseOrdersReportRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDtbPurchaseOrdersReportRow);
                return rowDtbPurchaseOrdersReportRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DtbPurchaseOrdersReportRow FindByRowID(int RowID) {
                return ((DtbPurchaseOrdersReportRow)(this.Rows.Find(new object[] {
                            RowID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DtbPurchaseOrdersReportDataTable cln = ((DtbPurchaseOrdersReportDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DtbPurchaseOrdersReportDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnRowID = base.Columns["RowID"];
                this.columnPurchaseOrderID = base.Columns["PurchaseOrderID"];
                this.columnPurchaseOrderNumber = base.Columns["PurchaseOrderNumber"];
                this.columnPurchaseOrderDate = base.Columns["PurchaseOrderDate"];
                this.columnPaymentDate = base.Columns["PaymentDate"];
                this.columnAmountStandard = base.Columns["AmountStandard"];
                this.columnSupplierID = base.Columns["SupplierID"];
                this.columnSupplierName = base.Columns["SupplierName"];
                this.columnAmountPaid = base.Columns["AmountPaid"];
                this.columnProductID = base.Columns["ProductID"];
                this.columnProductName = base.Columns["ProductName"];
                this.columnBarCodeValue = base.Columns["BarCodeValue"];
                this.columnDateIn = base.Columns["DateIn"];
                this.columnDateExpire = base.Columns["DateExpire"];
                this.columnQuantity = base.Columns["Quantity"];
                this.columnUnitPrice = base.Columns["UnitPrice"];
                this.columnProductUnitID = base.Columns["ProductUnitID"];
                this.columnProductUnitName = base.Columns["ProductUnitName"];
                this.columnCellID = base.Columns["CellID"];
                this.columnCellName = base.Columns["CellName"];
                this.columnPaidStatus = base.Columns["PaidStatus"];
                this.columnAmountStandardDuplicate = base.Columns["AmountStandardDuplicate"];
                this.columnAmountPaidDuplicate = base.Columns["AmountPaidDuplicate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnRowID = new global::System.Data.DataColumn("RowID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowID);
                this.columnPurchaseOrderID = new global::System.Data.DataColumn("PurchaseOrderID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchaseOrderID);
                this.columnPurchaseOrderNumber = new global::System.Data.DataColumn("PurchaseOrderNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchaseOrderNumber);
                this.columnPurchaseOrderDate = new global::System.Data.DataColumn("PurchaseOrderDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchaseOrderDate);
                this.columnPaymentDate = new global::System.Data.DataColumn("PaymentDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaymentDate);
                this.columnAmountStandard = new global::System.Data.DataColumn("AmountStandard", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmountStandard);
                this.columnSupplierID = new global::System.Data.DataColumn("SupplierID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierID);
                this.columnSupplierName = new global::System.Data.DataColumn("SupplierName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierName);
                this.columnAmountPaid = new global::System.Data.DataColumn("AmountPaid", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmountPaid);
                this.columnProductID = new global::System.Data.DataColumn("ProductID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductID);
                this.columnProductName = new global::System.Data.DataColumn("ProductName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductName);
                this.columnBarCodeValue = new global::System.Data.DataColumn("BarCodeValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBarCodeValue);
                this.columnDateIn = new global::System.Data.DataColumn("DateIn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateIn);
                this.columnDateExpire = new global::System.Data.DataColumn("DateExpire", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateExpire);
                this.columnQuantity = new global::System.Data.DataColumn("Quantity", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantity);
                this.columnUnitPrice = new global::System.Data.DataColumn("UnitPrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitPrice);
                this.columnProductUnitID = new global::System.Data.DataColumn("ProductUnitID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductUnitID);
                this.columnProductUnitName = new global::System.Data.DataColumn("ProductUnitName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductUnitName);
                this.columnCellID = new global::System.Data.DataColumn("CellID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCellID);
                this.columnCellName = new global::System.Data.DataColumn("CellName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCellName);
                this.columnPaidStatus = new global::System.Data.DataColumn("PaidStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaidStatus);
                this.columnAmountStandardDuplicate = new global::System.Data.DataColumn("AmountStandardDuplicate", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmountStandardDuplicate);
                this.columnAmountPaidDuplicate = new global::System.Data.DataColumn("AmountPaidDuplicate", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmountPaidDuplicate);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("DtbPurchaseOrdersReportKey", new global::System.Data.DataColumn[] {
                                this.columnRowID}, true));
                this.columnRowID.AllowDBNull = false;
                this.columnRowID.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DtbPurchaseOrdersReportRow NewDtbPurchaseOrdersReportRow() {
                return ((DtbPurchaseOrdersReportRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DtbPurchaseOrdersReportRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DtbPurchaseOrdersReportRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DtbPurchaseOrdersReportRowChanged != null)) {
                    this.DtbPurchaseOrdersReportRowChanged(this, new DtbPurchaseOrdersReportRowChangeEvent(((DtbPurchaseOrdersReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DtbPurchaseOrdersReportRowChanging != null)) {
                    this.DtbPurchaseOrdersReportRowChanging(this, new DtbPurchaseOrdersReportRowChangeEvent(((DtbPurchaseOrdersReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DtbPurchaseOrdersReportRowDeleted != null)) {
                    this.DtbPurchaseOrdersReportRowDeleted(this, new DtbPurchaseOrdersReportRowChangeEvent(((DtbPurchaseOrdersReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DtbPurchaseOrdersReportRowDeleting != null)) {
                    this.DtbPurchaseOrdersReportRowDeleting(this, new DtbPurchaseOrdersReportRowChangeEvent(((DtbPurchaseOrdersReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDtbPurchaseOrdersReportRow(DtbPurchaseOrdersReportRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DtsAssessment ds = new DtsAssessment();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DtbPurchaseOrdersReportDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DtbAssessmentRow : global::System.Data.DataRow {
            
            private DtbAssessmentDataTable tableDtbAssessment;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DtbAssessmentRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDtbAssessment = ((DtbAssessmentDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AssessmentID {
                get {
                    return ((int)(this[this.tableDtbAssessment.AssessmentIDColumn]));
                }
                set {
                    this[this.tableDtbAssessment.AssessmentIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SaleOrderNumber {
                get {
                    try {
                        return ((string)(this[this.tableDtbAssessment.SaleOrderNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SaleOrderNumber\' in table \'DtbAssessment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbAssessment.SaleOrderNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime SaleOrderDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDtbAssessment.SaleOrderDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SaleOrderDate\' in table \'DtbAssessment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbAssessment.SaleOrderDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerName {
                get {
                    try {
                        return ((string)(this[this.tableDtbAssessment.CustomerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerName\' in table \'DtbAssessment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbAssessment.CustomerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProductName {
                get {
                    try {
                        return ((string)(this[this.tableDtbAssessment.ProductNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductName\' in table \'DtbAssessment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbAssessment.ProductNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string QtySoldStr {
                get {
                    try {
                        return ((string)(this[this.tableDtbAssessment.QtySoldStrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QtySoldStr\' in table \'DtbAssessment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbAssessment.QtySoldStrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UnitName {
                get {
                    try {
                        return ((string)(this[this.tableDtbAssessment.UnitNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitName\' in table \'DtbAssessment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbAssessment.UnitNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double PriceIn {
                get {
                    try {
                        return ((double)(this[this.tableDtbAssessment.PriceInColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PriceIn\' in table \'DtbAssessment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbAssessment.PriceInColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double PriceOut {
                get {
                    try {
                        return ((double)(this[this.tableDtbAssessment.PriceOutColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PriceOut\' in table \'DtbAssessment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbAssessment.PriceOutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SubTotalIn {
                get {
                    try {
                        return ((double)(this[this.tableDtbAssessment.SubTotalInColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubTotalIn\' in table \'DtbAssessment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbAssessment.SubTotalInColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SubTotalOut {
                get {
                    try {
                        return ((double)(this[this.tableDtbAssessment.SubTotalOutColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubTotalOut\' in table \'DtbAssessment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbAssessment.SubTotalOutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Benefit {
                get {
                    try {
                        return ((double)(this[this.tableDtbAssessment.BenefitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Benefit\' in table \'DtbAssessment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbAssessment.BenefitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double AmountSold {
                get {
                    try {
                        return ((double)(this[this.tableDtbAssessment.AmountSoldColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AmountSold\' in table \'DtbAssessment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbAssessment.AmountSoldColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double AmountPaid {
                get {
                    try {
                        return ((double)(this[this.tableDtbAssessment.AmountPaidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AmountPaid\' in table \'DtbAssessment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbAssessment.AmountPaidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double AmountReturn {
                get {
                    try {
                        return ((double)(this[this.tableDtbAssessment.AmountReturnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AmountReturn\' in table \'DtbAssessment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbAssessment.AmountReturnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Discount {
                get {
                    try {
                        return ((double)(this[this.tableDtbAssessment.DiscountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Discount\' in table \'DtbAssessment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbAssessment.DiscountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cashier {
                get {
                    try {
                        return ((string)(this[this.tableDtbAssessment.CashierColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cashier\' in table \'DtbAssessment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbAssessment.CashierColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Deliverer {
                get {
                    try {
                        return ((string)(this[this.tableDtbAssessment.DelivererColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Deliverer\' in table \'DtbAssessment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbAssessment.DelivererColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSaleOrderNumberNull() {
                return this.IsNull(this.tableDtbAssessment.SaleOrderNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSaleOrderNumberNull() {
                this[this.tableDtbAssessment.SaleOrderNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSaleOrderDateNull() {
                return this.IsNull(this.tableDtbAssessment.SaleOrderDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSaleOrderDateNull() {
                this[this.tableDtbAssessment.SaleOrderDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerNameNull() {
                return this.IsNull(this.tableDtbAssessment.CustomerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerNameNull() {
                this[this.tableDtbAssessment.CustomerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProductNameNull() {
                return this.IsNull(this.tableDtbAssessment.ProductNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProductNameNull() {
                this[this.tableDtbAssessment.ProductNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtySoldStrNull() {
                return this.IsNull(this.tableDtbAssessment.QtySoldStrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtySoldStrNull() {
                this[this.tableDtbAssessment.QtySoldStrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitNameNull() {
                return this.IsNull(this.tableDtbAssessment.UnitNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitNameNull() {
                this[this.tableDtbAssessment.UnitNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPriceInNull() {
                return this.IsNull(this.tableDtbAssessment.PriceInColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPriceInNull() {
                this[this.tableDtbAssessment.PriceInColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPriceOutNull() {
                return this.IsNull(this.tableDtbAssessment.PriceOutColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPriceOutNull() {
                this[this.tableDtbAssessment.PriceOutColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubTotalInNull() {
                return this.IsNull(this.tableDtbAssessment.SubTotalInColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubTotalInNull() {
                this[this.tableDtbAssessment.SubTotalInColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubTotalOutNull() {
                return this.IsNull(this.tableDtbAssessment.SubTotalOutColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubTotalOutNull() {
                this[this.tableDtbAssessment.SubTotalOutColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBenefitNull() {
                return this.IsNull(this.tableDtbAssessment.BenefitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBenefitNull() {
                this[this.tableDtbAssessment.BenefitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountSoldNull() {
                return this.IsNull(this.tableDtbAssessment.AmountSoldColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountSoldNull() {
                this[this.tableDtbAssessment.AmountSoldColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountPaidNull() {
                return this.IsNull(this.tableDtbAssessment.AmountPaidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountPaidNull() {
                this[this.tableDtbAssessment.AmountPaidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountReturnNull() {
                return this.IsNull(this.tableDtbAssessment.AmountReturnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountReturnNull() {
                this[this.tableDtbAssessment.AmountReturnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiscountNull() {
                return this.IsNull(this.tableDtbAssessment.DiscountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiscountNull() {
                this[this.tableDtbAssessment.DiscountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCashierNull() {
                return this.IsNull(this.tableDtbAssessment.CashierColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCashierNull() {
                this[this.tableDtbAssessment.CashierColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDelivererNull() {
                return this.IsNull(this.tableDtbAssessment.DelivererColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDelivererNull() {
                this[this.tableDtbAssessment.DelivererColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DtbProductRow : global::System.Data.DataRow {
            
            private DtbProductDataTable tableDtbProduct;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DtbProductRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDtbProduct = ((DtbProductDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ProductID {
                get {
                    return ((int)(this[this.tableDtbProduct.ProductIDColumn]));
                }
                set {
                    this[this.tableDtbProduct.ProductIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProductCode {
                get {
                    try {
                        return ((string)(this[this.tableDtbProduct.ProductCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductCode\' in table \'DtbProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbProduct.ProductCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProductName {
                get {
                    try {
                        return ((string)(this[this.tableDtbProduct.ProductNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductName\' in table \'DtbProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbProduct.ProductNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DisplayName {
                get {
                    try {
                        return ((string)(this[this.tableDtbProduct.DisplayNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DisplayName\' in table \'DtbProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbProduct.DisplayNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remark {
                get {
                    try {
                        return ((string)(this[this.tableDtbProduct.RemarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remark\' in table \'DtbProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbProduct.RemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double MinQty {
                get {
                    try {
                        return ((double)(this[this.tableDtbProduct.MinQtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MinQty\' in table \'DtbProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbProduct.MinQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double UnitPriceIn {
                get {
                    try {
                        return ((double)(this[this.tableDtbProduct.UnitPriceInColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitPriceIn\' in table \'DtbProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbProduct.UnitPriceInColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double UnitPriceOut {
                get {
                    try {
                        return ((double)(this[this.tableDtbProduct.UnitPriceOutColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitPriceOut\' in table \'DtbProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbProduct.UnitPriceOutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double QtyInStock {
                get {
                    try {
                        return ((double)(this[this.tableDtbProduct.QtyInStockColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QtyInStock\' in table \'DtbProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbProduct.QtyInStockColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double QtySold {
                get {
                    try {
                        return ((double)(this[this.tableDtbProduct.QtySoldColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QtySold\' in table \'DtbProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbProduct.QtySoldColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ExtraPercentage {
                get {
                    try {
                        return ((double)(this[this.tableDtbProduct.ExtraPercentageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExtraPercentage\' in table \'DtbProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbProduct.ExtraPercentageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CategoryID {
                get {
                    try {
                        return ((int)(this[this.tableDtbProduct.CategoryIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CategoryID\' in table \'DtbProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbProduct.CategoryIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LaboratoryID {
                get {
                    try {
                        return ((int)(this[this.tableDtbProduct.LaboratoryIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LaboratoryID\' in table \'DtbProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbProduct.LaboratoryIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CountryID {
                get {
                    try {
                        return ((int)(this[this.tableDtbProduct.CountryIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CountryID\' in table \'DtbProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbProduct.CountryIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime LastUpdate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDtbProduct.LastUpdateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastUpdate\' in table \'DtbProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbProduct.LastUpdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LatestUnitID {
                get {
                    try {
                        return ((int)(this[this.tableDtbProduct.LatestUnitIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LatestUnitID\' in table \'DtbProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbProduct.LatestUnitIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LatestLocationID {
                get {
                    try {
                        return ((int)(this[this.tableDtbProduct.LatestLocationIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LatestLocationID\' in table \'DtbProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbProduct.LatestLocationIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime LastExpire {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDtbProduct.LastExpireColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastExpire\' in table \'DtbProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbProduct.LastExpireColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int StoreID {
                get {
                    try {
                        return ((int)(this[this.tableDtbProduct.StoreIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StoreID\' in table \'DtbProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbProduct.StoreIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProductCodeNull() {
                return this.IsNull(this.tableDtbProduct.ProductCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProductCodeNull() {
                this[this.tableDtbProduct.ProductCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProductNameNull() {
                return this.IsNull(this.tableDtbProduct.ProductNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProductNameNull() {
                this[this.tableDtbProduct.ProductNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDisplayNameNull() {
                return this.IsNull(this.tableDtbProduct.DisplayNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDisplayNameNull() {
                this[this.tableDtbProduct.DisplayNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemarkNull() {
                return this.IsNull(this.tableDtbProduct.RemarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemarkNull() {
                this[this.tableDtbProduct.RemarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMinQtyNull() {
                return this.IsNull(this.tableDtbProduct.MinQtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMinQtyNull() {
                this[this.tableDtbProduct.MinQtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitPriceInNull() {
                return this.IsNull(this.tableDtbProduct.UnitPriceInColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitPriceInNull() {
                this[this.tableDtbProduct.UnitPriceInColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitPriceOutNull() {
                return this.IsNull(this.tableDtbProduct.UnitPriceOutColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitPriceOutNull() {
                this[this.tableDtbProduct.UnitPriceOutColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyInStockNull() {
                return this.IsNull(this.tableDtbProduct.QtyInStockColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyInStockNull() {
                this[this.tableDtbProduct.QtyInStockColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtySoldNull() {
                return this.IsNull(this.tableDtbProduct.QtySoldColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtySoldNull() {
                this[this.tableDtbProduct.QtySoldColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExtraPercentageNull() {
                return this.IsNull(this.tableDtbProduct.ExtraPercentageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExtraPercentageNull() {
                this[this.tableDtbProduct.ExtraPercentageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCategoryIDNull() {
                return this.IsNull(this.tableDtbProduct.CategoryIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCategoryIDNull() {
                this[this.tableDtbProduct.CategoryIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLaboratoryIDNull() {
                return this.IsNull(this.tableDtbProduct.LaboratoryIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLaboratoryIDNull() {
                this[this.tableDtbProduct.LaboratoryIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCountryIDNull() {
                return this.IsNull(this.tableDtbProduct.CountryIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCountryIDNull() {
                this[this.tableDtbProduct.CountryIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLastUpdateNull() {
                return this.IsNull(this.tableDtbProduct.LastUpdateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLastUpdateNull() {
                this[this.tableDtbProduct.LastUpdateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLatestUnitIDNull() {
                return this.IsNull(this.tableDtbProduct.LatestUnitIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLatestUnitIDNull() {
                this[this.tableDtbProduct.LatestUnitIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLatestLocationIDNull() {
                return this.IsNull(this.tableDtbProduct.LatestLocationIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLatestLocationIDNull() {
                this[this.tableDtbProduct.LatestLocationIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLastExpireNull() {
                return this.IsNull(this.tableDtbProduct.LastExpireColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLastExpireNull() {
                this[this.tableDtbProduct.LastExpireColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStoreIDNull() {
                return this.IsNull(this.tableDtbProduct.StoreIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStoreIDNull() {
                this[this.tableDtbProduct.StoreIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DtbPurchaseOrdersReportRow : global::System.Data.DataRow {
            
            private DtbPurchaseOrdersReportDataTable tableDtbPurchaseOrdersReport;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DtbPurchaseOrdersReportRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDtbPurchaseOrdersReport = ((DtbPurchaseOrdersReportDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RowID {
                get {
                    return ((int)(this[this.tableDtbPurchaseOrdersReport.RowIDColumn]));
                }
                set {
                    this[this.tableDtbPurchaseOrdersReport.RowIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PurchaseOrderID {
                get {
                    try {
                        return ((int)(this[this.tableDtbPurchaseOrdersReport.PurchaseOrderIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PurchaseOrderID\' in table \'DtbPurchaseOrdersReport\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableDtbPurchaseOrdersReport.PurchaseOrderIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PurchaseOrderNumber {
                get {
                    try {
                        return ((string)(this[this.tableDtbPurchaseOrdersReport.PurchaseOrderNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PurchaseOrderNumber\' in table \'DtbPurchaseOrdersReport\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbPurchaseOrdersReport.PurchaseOrderNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PurchaseOrderDate {
                get {
                    try {
                        return ((string)(this[this.tableDtbPurchaseOrdersReport.PurchaseOrderDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PurchaseOrderDate\' in table \'DtbPurchaseOrdersReport\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableDtbPurchaseOrdersReport.PurchaseOrderDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PaymentDate {
                get {
                    try {
                        return ((string)(this[this.tableDtbPurchaseOrdersReport.PaymentDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaymentDate\' in table \'DtbPurchaseOrdersReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbPurchaseOrdersReport.PaymentDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double AmountStandard {
                get {
                    try {
                        return ((double)(this[this.tableDtbPurchaseOrdersReport.AmountStandardColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AmountStandard\' in table \'DtbPurchaseOrdersReport\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableDtbPurchaseOrdersReport.AmountStandardColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SupplierID {
                get {
                    try {
                        return ((int)(this[this.tableDtbPurchaseOrdersReport.SupplierIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SupplierID\' in table \'DtbPurchaseOrdersReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbPurchaseOrdersReport.SupplierIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SupplierName {
                get {
                    try {
                        return ((string)(this[this.tableDtbPurchaseOrdersReport.SupplierNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SupplierName\' in table \'DtbPurchaseOrdersReport\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableDtbPurchaseOrdersReport.SupplierNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double AmountPaid {
                get {
                    try {
                        return ((double)(this[this.tableDtbPurchaseOrdersReport.AmountPaidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AmountPaid\' in table \'DtbPurchaseOrdersReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbPurchaseOrdersReport.AmountPaidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ProductID {
                get {
                    try {
                        return ((int)(this[this.tableDtbPurchaseOrdersReport.ProductIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductID\' in table \'DtbPurchaseOrdersReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbPurchaseOrdersReport.ProductIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProductName {
                get {
                    try {
                        return ((string)(this[this.tableDtbPurchaseOrdersReport.ProductNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductName\' in table \'DtbPurchaseOrdersReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbPurchaseOrdersReport.ProductNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BarCodeValue {
                get {
                    try {
                        return ((string)(this[this.tableDtbPurchaseOrdersReport.BarCodeValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BarCodeValue\' in table \'DtbPurchaseOrdersReport\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableDtbPurchaseOrdersReport.BarCodeValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateIn {
                get {
                    try {
                        return ((string)(this[this.tableDtbPurchaseOrdersReport.DateInColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateIn\' in table \'DtbPurchaseOrdersReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbPurchaseOrdersReport.DateInColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateExpire {
                get {
                    try {
                        return ((string)(this[this.tableDtbPurchaseOrdersReport.DateExpireColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateExpire\' in table \'DtbPurchaseOrdersReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbPurchaseOrdersReport.DateExpireColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Quantity {
                get {
                    try {
                        return ((double)(this[this.tableDtbPurchaseOrdersReport.QuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Quantity\' in table \'DtbPurchaseOrdersReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbPurchaseOrdersReport.QuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double UnitPrice {
                get {
                    try {
                        return ((double)(this[this.tableDtbPurchaseOrdersReport.UnitPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitPrice\' in table \'DtbPurchaseOrdersReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbPurchaseOrdersReport.UnitPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ProductUnitID {
                get {
                    try {
                        return ((int)(this[this.tableDtbPurchaseOrdersReport.ProductUnitIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductUnitID\' in table \'DtbPurchaseOrdersReport\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableDtbPurchaseOrdersReport.ProductUnitIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProductUnitName {
                get {
                    try {
                        return ((string)(this[this.tableDtbPurchaseOrdersReport.ProductUnitNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductUnitName\' in table \'DtbPurchaseOrdersReport\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableDtbPurchaseOrdersReport.ProductUnitNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CellID {
                get {
                    try {
                        return ((int)(this[this.tableDtbPurchaseOrdersReport.CellIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CellID\' in table \'DtbPurchaseOrdersReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbPurchaseOrdersReport.CellIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CellName {
                get {
                    try {
                        return ((string)(this[this.tableDtbPurchaseOrdersReport.CellNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CellName\' in table \'DtbPurchaseOrdersReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbPurchaseOrdersReport.CellNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PaidStatus {
                get {
                    try {
                        return ((string)(this[this.tableDtbPurchaseOrdersReport.PaidStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaidStatus\' in table \'DtbPurchaseOrdersReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbPurchaseOrdersReport.PaidStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double AmountStandardDuplicate {
                get {
                    try {
                        return ((double)(this[this.tableDtbPurchaseOrdersReport.AmountStandardDuplicateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AmountStandardDuplicate\' in table \'DtbPurchaseOrdersReport\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbPurchaseOrdersReport.AmountStandardDuplicateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double AmountPaidDuplicate {
                get {
                    try {
                        return ((double)(this[this.tableDtbPurchaseOrdersReport.AmountPaidDuplicateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AmountPaidDuplicate\' in table \'DtbPurchaseOrdersReport\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbPurchaseOrdersReport.AmountPaidDuplicateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurchaseOrderIDNull() {
                return this.IsNull(this.tableDtbPurchaseOrdersReport.PurchaseOrderIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPurchaseOrderIDNull() {
                this[this.tableDtbPurchaseOrdersReport.PurchaseOrderIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurchaseOrderNumberNull() {
                return this.IsNull(this.tableDtbPurchaseOrdersReport.PurchaseOrderNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPurchaseOrderNumberNull() {
                this[this.tableDtbPurchaseOrdersReport.PurchaseOrderNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurchaseOrderDateNull() {
                return this.IsNull(this.tableDtbPurchaseOrdersReport.PurchaseOrderDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPurchaseOrderDateNull() {
                this[this.tableDtbPurchaseOrdersReport.PurchaseOrderDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPaymentDateNull() {
                return this.IsNull(this.tableDtbPurchaseOrdersReport.PaymentDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPaymentDateNull() {
                this[this.tableDtbPurchaseOrdersReport.PaymentDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountStandardNull() {
                return this.IsNull(this.tableDtbPurchaseOrdersReport.AmountStandardColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountStandardNull() {
                this[this.tableDtbPurchaseOrdersReport.AmountStandardColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplierIDNull() {
                return this.IsNull(this.tableDtbPurchaseOrdersReport.SupplierIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplierIDNull() {
                this[this.tableDtbPurchaseOrdersReport.SupplierIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplierNameNull() {
                return this.IsNull(this.tableDtbPurchaseOrdersReport.SupplierNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplierNameNull() {
                this[this.tableDtbPurchaseOrdersReport.SupplierNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountPaidNull() {
                return this.IsNull(this.tableDtbPurchaseOrdersReport.AmountPaidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountPaidNull() {
                this[this.tableDtbPurchaseOrdersReport.AmountPaidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProductIDNull() {
                return this.IsNull(this.tableDtbPurchaseOrdersReport.ProductIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProductIDNull() {
                this[this.tableDtbPurchaseOrdersReport.ProductIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProductNameNull() {
                return this.IsNull(this.tableDtbPurchaseOrdersReport.ProductNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProductNameNull() {
                this[this.tableDtbPurchaseOrdersReport.ProductNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBarCodeValueNull() {
                return this.IsNull(this.tableDtbPurchaseOrdersReport.BarCodeValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBarCodeValueNull() {
                this[this.tableDtbPurchaseOrdersReport.BarCodeValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateInNull() {
                return this.IsNull(this.tableDtbPurchaseOrdersReport.DateInColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateInNull() {
                this[this.tableDtbPurchaseOrdersReport.DateInColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateExpireNull() {
                return this.IsNull(this.tableDtbPurchaseOrdersReport.DateExpireColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateExpireNull() {
                this[this.tableDtbPurchaseOrdersReport.DateExpireColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQuantityNull() {
                return this.IsNull(this.tableDtbPurchaseOrdersReport.QuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQuantityNull() {
                this[this.tableDtbPurchaseOrdersReport.QuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitPriceNull() {
                return this.IsNull(this.tableDtbPurchaseOrdersReport.UnitPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitPriceNull() {
                this[this.tableDtbPurchaseOrdersReport.UnitPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProductUnitIDNull() {
                return this.IsNull(this.tableDtbPurchaseOrdersReport.ProductUnitIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProductUnitIDNull() {
                this[this.tableDtbPurchaseOrdersReport.ProductUnitIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProductUnitNameNull() {
                return this.IsNull(this.tableDtbPurchaseOrdersReport.ProductUnitNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProductUnitNameNull() {
                this[this.tableDtbPurchaseOrdersReport.ProductUnitNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCellIDNull() {
                return this.IsNull(this.tableDtbPurchaseOrdersReport.CellIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCellIDNull() {
                this[this.tableDtbPurchaseOrdersReport.CellIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCellNameNull() {
                return this.IsNull(this.tableDtbPurchaseOrdersReport.CellNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCellNameNull() {
                this[this.tableDtbPurchaseOrdersReport.CellNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPaidStatusNull() {
                return this.IsNull(this.tableDtbPurchaseOrdersReport.PaidStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPaidStatusNull() {
                this[this.tableDtbPurchaseOrdersReport.PaidStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountStandardDuplicateNull() {
                return this.IsNull(this.tableDtbPurchaseOrdersReport.AmountStandardDuplicateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountStandardDuplicateNull() {
                this[this.tableDtbPurchaseOrdersReport.AmountStandardDuplicateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountPaidDuplicateNull() {
                return this.IsNull(this.tableDtbPurchaseOrdersReport.AmountPaidDuplicateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountPaidDuplicateNull() {
                this[this.tableDtbPurchaseOrdersReport.AmountPaidDuplicateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DtbAssessmentRowChangeEvent : global::System.EventArgs {
            
            private DtbAssessmentRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DtbAssessmentRowChangeEvent(DtbAssessmentRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DtbAssessmentRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DtbProductRowChangeEvent : global::System.EventArgs {
            
            private DtbProductRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DtbProductRowChangeEvent(DtbProductRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DtbProductRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DtbPurchaseOrdersReportRowChangeEvent : global::System.EventArgs {
            
            private DtbPurchaseOrdersReportRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DtbPurchaseOrdersReportRowChangeEvent(DtbPurchaseOrdersReportRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DtbPurchaseOrdersReportRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591